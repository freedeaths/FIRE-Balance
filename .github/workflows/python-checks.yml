name: Python Code Quality Checks

on:
  push:
    branches: [ main ]
    paths:
      - 'implementations/python/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'implementations/python/**'

jobs:
  code-quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      working-directory: implementations/python
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r dev-requirements.txt

    - name: Remove unused imports (autoflake)
      working-directory: implementations/python
      run: |
        autoflake --check --remove-all-unused-imports --recursive --remove-unused-variables --exclude=__pycache__ .

    - name: Check import sorting (isort)
      working-directory: implementations/python
      run: |
        isort --check-only --diff .

    - name: Check code formatting (black)
      working-directory: implementations/python
      run: |
        black --check --diff .

    - name: Lint with flake8
      working-directory: implementations/python
      run: |
        flake8 .

    - name: Type check with mypy
      working-directory: implementations/python
      run: |
        mypy .

    - name: Run tests
      working-directory: implementations/python
      run: |
        pytest

  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install dependencies for Python implementation
      working-directory: implementations/python
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r dev-requirements.txt

    - name: Install pre-commit
      run: pip install pre-commit

    - name: Run project-level pre-commit hooks
      run: |
        pre-commit run --all-files --config .pre-commit-config.yaml